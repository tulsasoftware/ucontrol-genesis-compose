################################################################################
# Node-RED Stack or Compose
################################################################################
# docker-compose [-f docker-compose.yml] -p myGateway up
################################################################################
version: "3.3"

services:
  node-red:
    container_name: nodered
    image: ghcr.io/tulsasoftware/ucontrol-genesis-tag-service:${TAG_SERVICE_TAG}
    environment:
      - TZ=US/Central
    ports:
      #GUI WILL LIVE ON 3080
      - "3080:1880"
      - "1433:1433"
      - "1434:1434"
      - "50202:50202"
    networks:
      - node-red-net
    volumes:
      - ../../ucontroldata/nodered:/data
    restart: unless-stopped
  couchdb:
    container_name: settings
    image: couchdb:3.2.2
    env_file:
      - ".env"
    ports:
      - "${COUCHDB_PORT}:5984"
    networks:
      - node-red-net
    volumes:
      #expose the db files on the host machine
      - ../../ucontroldata/couchdb/:/opt/couchdb/data
    restart: always
    #on launch, create the default system databases
    # command: ["sh", "-c", "/opt/couchdb/bin/couchdb & { sleep 3 ; curl -X PUT http://${COUCHDB_USER}:${COUCHDB_PASSWORD}@${COUCHDB_IP}:5984/_users ; curl -X PUT http://${COUCHDB_USER}:${COUCHDB_PASSWORD}@${COUCHDB_IP}:5984/_replicator ; fg ; }"]
    #In another window, after startup:

    # $ curl localhost:5984
    # {"couchdb":"Welcome","version":"2.1.1","features":["scheduler"],"vendor":{"name":"The Apache Software Foundation"}}
    # $ curl -X PUT http://admin:password@localhost:5984/_users
    # {"ok":true}
    # $ curl -X PUT http://admin:password@localhost:5984/_replicator
    # {"ok":true}
    # $ curl -X PUT http://admin:password@localhost:5984/_global_changes
    # {"ok":true}

    #from 0.0.0.0:5984/_utils gui, login
    #DELETE global_changes db (not needed, requires extra resources)
    #CREATE vfdctl_settings (no partition)
  # Creates an InfluxDB instance to store the
  # telemetry results
  influxdb:
    image: influxdb:1.8.10
    restart: always
    volumes:
      - influxdb:/var/lib/influxdb
    ports:
      - "8083:8083"
      - "8086:8086"
    environment:
      - INFLUXDB_ADMIN_USER=${INFLUXDB_USER}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_PASS}
      - INFLUXDB_DB=telemetry

  # Displays the results in a Grafana dashborad
  grafana:
    image: grafana/grafana:latest
    restart: always
    depends_on:
      - influxdb
    ports:
      - 3000:3000
    volumes:
      - grafana:/var/lib/grafana

volumes:
  grafana:
  influxdb:

networks:
  node-red-net:
      ipam:
        driver: default
        config:
        - subnet: ${TAG_SERVICE_SUBNET}